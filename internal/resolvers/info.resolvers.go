package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"

	"github.com/maciejas22/conference-manager/api/internal/graph"
	"github.com/maciejas22/conference-manager/api/internal/models"
	"github.com/maciejas22/conference-manager/api/internal/services"
)

func (r *queryResolver) News(ctx context.Context) ([]*models.News, error) {
	return services.GetNews(ctx, r.dbClient)
}

func (r *queryResolver) TermsAndConditions(ctx context.Context) (*models.TermsOfService, error) {
	return services.GetTermsAndConditions(ctx, r.dbClient)
}

func (r *sectionResolver) Subsections(ctx context.Context, obj *models.Section) ([]*models.SubSection, error) {
	return services.GetToSSubsections(ctx, r.dbClient, obj.ID)
}

func (r *termsOfServiceResolver) Sections(ctx context.Context, obj *models.TermsOfService) ([]*models.Section, error) {
	return services.GetToSSections(ctx, r.dbClient, obj.ID)
}

func (r *Resolver) Section() graph.SectionResolver { return &sectionResolver{r} }

func (r *Resolver) TermsOfService() graph.TermsOfServiceResolver { return &termsOfServiceResolver{r} }

type sectionResolver struct{ *Resolver }
type termsOfServiceResolver struct{ *Resolver }
