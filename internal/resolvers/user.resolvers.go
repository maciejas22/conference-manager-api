package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"

	"github.com/maciejas22/conference-manager/api/internal/auth"
	"github.com/maciejas22/conference-manager/api/internal/models"
	"github.com/maciejas22/conference-manager/api/internal/services"
	"github.com/vektah/gqlparser/v2/gqlerror"
)

func (r *mutationResolver) UpdateUser(ctx context.Context, updateUserInput models.UpdateUserInput) (*models.User, error) {
	u, _ := auth.FromContext(ctx)

	return services.UpdateUser(ctx, r.dbClient, u.Subject, updateUserInput)
}

func (r *queryResolver) User(ctx context.Context) (*models.User, error) {
	u, ok := auth.FromContext(ctx)
	if !ok {
		return nil, gqlerror.Errorf("unauthorized user")
	}

	return services.GetUserData(ctx, r.dbClient, u.Subject)
}
