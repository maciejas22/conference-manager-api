enum Role {
  Organizer
  Participant
}

type User {
  id: ID!
  name: String
  surname: String
  username: String
  email: String!
  role: Role!
}

extend type Query {
  user: User @authenticated
}

input LoginUserInput {
  email: String!
  password: String!
}

input RegisterUserInput {
  email: String!
  password: String!
  role: Role!
}

input UpdateUserInput {
  name: String!
  surname: String!
  username: String!
  email: String!
}

extend type Mutation {
  loginUser(loginUserInput: LoginUserInput!): String
  registerUser(registerUserInput: RegisterUserInput!): String
  updateUser(updateUserInput: UpdateUserInput!): User @authenticated
}
